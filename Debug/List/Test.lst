###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.40.2.51604/W32 for ARM     04/Jun/2017  22:41:29 #
# Copyright (C) 1999-2009 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Test_IAR\Source\Test.cpp                              #
#    Command line =  D:\Test_IAR\Source\Test.cpp -lC D:\Test_IAR\Debug\List\  #
#                    -lA D:\Test_IAR\Debug\List\ -o D:\Test_IAR\Debug\Obj\    #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None --eec++    #
#                    --dlib_config "D:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 5.4\arm\INC\DLib_Config_Norma #
#                    l.h" --preinclude D:\Test_IAR\Header\Test.h -I Header\   #
#                    -I Source\ -I "D:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 5.4\arm\INC\" -Ol             #
#    List file    =  D:\Test_IAR\Debug\List\Test.lst                          #
#    Object file  =  D:\Test_IAR\Debug\Obj\Test.o                             #
#                                                                             #
#                                                                             #
###############################################################################

D:\Test_IAR\Source\Test.cpp
      1          //#include"Test.h"    

   \                                 In section .text, align 2, keep-with-next
   \   __intrinsic __code __interwork Test::subobject Test()
   \                     _ZN4TestC2Ev:
   \   00000000   80B5               PUSH     {R7,LR}
      2              Test::Test(void){this->i=0;};
   \   00000002   ........           BL       _ZN4TestC9Ev
   \   00000006   02BD               POP      {R1,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __intrinsic __code __interwork Test::complete Test()
   \                     _ZN4TestC1Ev:
   \   00000000   80B5               PUSH     {R7,LR}
   \   00000002   ........           BL       _ZN4TestC9Ev
   \   00000006   02BD               POP      {R1,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     _ZN4TestC9Ev:
   \   00000000   0021               MOVS     R1,#+0
   \   00000002   0160               STR      R1,[R0, #+0]
   \   00000004   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __intrinsic __code __interwork Test::subobject Test(int)
   \                     _ZN4TestC2Ei:
   \   00000000   80B5               PUSH     {R7,LR}
      3              Test::Test(int i){this->i=i;};
   \   00000002   ........           BL       _ZN4TestC9Ei
   \   00000006   02BD               POP      {R1,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __intrinsic __code __interwork Test::complete Test(int)
   \                     _ZN4TestC1Ei:
   \   00000000   80B5               PUSH     {R7,LR}
   \   00000002   ........           BL       _ZN4TestC9Ei
   \   00000006   02BD               POP      {R1,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     _ZN4TestC9Ei:
   \   00000000   0160               STR      R1,[R0, #+0]
   \   00000002   7047               BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
      4              int Test::Get(){return this->i;};
   \                     _ZN4Test3GetEv:
   \   00000000   0068               LDR      R0,[R0, #+0]
   \   00000002   7047               BX       LR               ;; return

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     Test::Get()                    0
     Test::Test()                   0
     Test::Test(int)                0
     Test::complete Test()          8
     Test::complete Test(int)       8
     Test::subobject Test()         8
     Test::subobject Test(int)      8


   Section sizes:

     Function/Label            Bytes
     --------------            -----
     Test::subobject Test()       8
     Test::complete Test()        8
     Test::Test()                 6
     Test::subobject Test(int)    8
     Test::complete Test(int)     8
     Test::Test(int)              4
     Test::Get()                  4

 
 46 bytes in section .text
 
 46 bytes of CODE memory

Errors: none
Warnings: none
